/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode *root,int level,int col,map <int,map <int,multiset<int>>> &m) {
        if(root == NULL) return;
        m[level][col].insert(root->val);
        solve(root->left,level-1,col+1,m);
        solve(root->right,level + 1,col+1,m);
        return;
    }

    vector<vector<int>> verticalTraversal(TreeNode* root) {
        map <int,map <int,multiset<int>>> m;
        solve(root,0,0,m);
        vector <vector <int>> ans;
        for(auto i:m) {
            vector <int> temp;
            for(auto j:i.second) {
                for(auto h:j.second) temp.push_back(h);
            }
            ans.push_back(temp);
        }
        return ans;
    }
};
