class Solution {
private:
    bool funct(vector <int>& nums,int thre,int mid) {
        int count = 0;
        double two = mid;
        for(auto i:nums) {
            double one = i;
            count =  count + ceil(one / two);
            // cout<<count<<endl;
        }
        if(count <= thre) return true;
        return false;
    }

public:
    int smallestDivisor(vector<int>& nums, int thre) {
        int start = 1;
        int end = *max_element(nums.begin(),nums.end());
        // cout<<funct(nums,thre,5)<<endl;
        while(start<=end) {
            int mid = start + (end - start)/2;
            int ans = funct(nums,thre,mid);
            if(ans) {
                end = mid -1;
            }
            else start = mid + 1;
        }
        return start;
    }
};
