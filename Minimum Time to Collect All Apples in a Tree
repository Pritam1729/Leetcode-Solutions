class Solution {
public:
    int solve(vector<vector<int>>& adj, vector<bool>& hasApple,vector <int> &vis,int node) {
        int minn = 0;
        vis[node] = 1;
        for(auto i:adj[node]) {
            if(!vis[i]) {
                minn += (1+solve(adj,hasApple,vis,i));
            }
        }
        if(hasApple[node] == true || minn != 0) {
            if(node != 0)
                return 1+minn;
            return minn;
        }
        if(node != 0) return -1;
        return 0;
    }


    int minTime(int n, vector<vector<int>>& edges, vector<bool>& hasApple) {
        vector <vector <int>> adj(n);
        for(auto i:edges) {
            adj[i[0]].push_back(i[1]);
            adj[i[1]].push_back(i[0]);
        }
        vector <int> vis(n+1,0);
        return solve(adj,hasApple,vis,0);
    }
};
