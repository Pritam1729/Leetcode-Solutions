class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        vector <vector <int>> dist(n,vector <int> (n,1e9));
        for(auto i:edges){
            dist[i[0]][i[1]] = dist[i[1]][i[0]] = i[2];
            dist[i[0]][i[0]] = dist[i[1]][i[1]] = 0;
        }

        int count = n+1;
        int city = -1;

        for(int k = 0;k<n;k++) {
            for(int i = 0;i<n;i++) {
                for(int j = 0;j<n;j++) {
                    dist[i][j] = min(dist[i][j],dist[i][k] + dist[k][j]);
                }
            }
        }

        for(int i = 0;i<n;i++) {
            int countt = 0;
            for(int j = 0;j<n;j++) {
                if(dist[i][j] <= distanceThreshold) countt++;
            }
            if(countt <= count) {
                count = countt;
                city = max(city,i);
            }
        }
        return city;
    }
};
