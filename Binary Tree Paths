/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(TreeNode *root,vector <string> &ans,string s) {
        if(root == NULL) return;
        if(root->left ==  NULL && root->right == NULL) {
            ans.push_back(s + "->" + to_string(root->val));
            return;
        }
        s += "->";
        s += to_string(root->val);
        inorder(root->left,ans,s);
        inorder(root->right,ans,s);
        return;
    }

    vector<string> binaryTreePaths(TreeNode* root) {
        vector <string> ans;
        if(!root->left && !root->right) ans.push_back(to_string(root->val));
        inorder(root->left,ans,"" + to_string(root->val));
        inorder(root->right,ans,"" + to_string(root->val));
        return ans;
    }
};
