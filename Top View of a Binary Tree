/*
struct Node
{
    int data;
    Node* left;
    Node* right;
};
*/
class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    void solve(Node *root,int level,map <int,int> &m) {
        if(root == NULL) return;
        if(m[level] == 0) m[level] = root->data;
        solve(root->left,level-1,m);
        solve(root->right,level+1,m);
        return;
    }
    
    vector<int> topView(Node *root){
        //Your code here
        map <int,int> m;
        vector <int> ans;
        queue <pair <Node *,int>> q;
        q.push({root,0});
        while(!q.empty()) {
            auto i = q.front();
            int level = i.second;
            Node *node = i.first;
            q.pop();
            if(m[level] == 0) m[level] = node->data;
            if(node->left != NULL) {
                q.push({node->left,level-1});
            }
            if(node->right != NULL) {
                q.push({node->right,level+1});
            }
        }
        for(auto i:m) ans.push_back(i.second);
        return ans;
    }
        

};
