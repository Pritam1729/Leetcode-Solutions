class Solution {
public:
    int funct(vector <int>& bloomDay,int m,int k,int mid) {
        int count = 0;
        int temp = 0;
        for(int i = 0;i<bloomDay.size();i++) {
            if(bloomDay[i] <= mid) {
                temp++;
            }
            else temp = 0;
            if(temp == k) {
                count++;
                temp = 0;
            }
        }
        // if(temp == k) count++;
        return count;
    }

    int minDays(vector<int>& bloomDay, int m, int k) {
        if((long long)m*(long long)k > bloomDay.size()) return -1;
        int start = *min_element(bloomDay.begin(),bloomDay.end());
        int end = *max_element(bloomDay.begin(),bloomDay.end());
        cout<<funct(bloomDay,m,k,9)<<endl;
        while(start <= end) {
            int mid = start + (end - start)/2;
            int ans = funct(bloomDay,m,k,mid);
            if(ans >= m)
                end = mid - 1;
            else 
                start = mid + 1;
        }
        return start;
    }
};
