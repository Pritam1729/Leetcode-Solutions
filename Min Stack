class MinStack {
public:
    priority_queue<int, vector<int>, greater<int>> p; 
    vector <int> s;

    MinStack() {

    }

    void push(int val) {
        p.push(val);
        s.push_back(val);
    }

    void pop() {
        int node = s[s.size()-1];
        s.pop_back();
        vector<int> v;
        while (p.top() != node) {
            v.push_back(p.top());
            p.pop();
        }
        p.pop();
        for (int i = 0; i < v.size(); i++)
            p.push(v[i]);
    }

    int top() {
        return s[s.size()-1];
    }

    int getMin() {
        return p.top();
    }
};
