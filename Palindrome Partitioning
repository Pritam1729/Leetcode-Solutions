class Solution {
public:
    bool ispalindrome(string s) {
        int i = 0,j = s.length()-1;
        while(i<j) {
            if(s[i] != s[j]) return false;
            i++;
            j--;
        }
        return true;
    }

    void solve(string s,int index,vector <vector <string>> &ans,vector <string> res) {
        if(index >= s.length()) {
            ans.push_back(res);
            return ;
        }
        // string s = "";
        for(int i = index;i<s.length();i++) {
            if(ispalindrome(s.substr(index,i-index+1))) {
                // cout<<s.substr(index,i-index+1)<<endl;
                res.push_back(s.substr(index,i-index+1));
                solve(s,i+1,ans,res);
                res.pop_back();
            }
        }
        return ;
    }


    vector<vector<string>> partition(string s) {
        vector <vector <string>> ans;
        vector <string> res;
        solve(s,0,ans,res);
        return ans;
    }
};
