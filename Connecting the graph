geeksforgeeks
Courses
Get 90% Refund
Tutorials
Jobs
Practice
All DSA Problems
Problem of the Day
GfG SDE Sheet
Curated DSA Lists
Contests
avatar


Connecting the graph
MediumAccuracy: 52.79%Submissions: 14K+Points: 4
90% Refund available on all premium courses 
Discover How  

banner
You are given a graph with n vertices and m edges.

You can remove one edge from anywhere and add that edge between any two vertices in one operation.

Find the minimum number of operations that will be required to make the graph connected.

If it is not possible to make the graph connected, return -1.

 

Example 1: 

Input:
n=4
m=3
Edge=[ [0, 1] , [0, 2] , [1, 2] ]

Output:
1

Explanation:
Remove edge between vertices 1 and 2 and add between vertices 1 and 3.
 

Example 2:

Input:
n=6
m=5
Edge=[ [0,1] , [0,2] , [0,3] , [1,2] , [1,3] ]

Output:
2

Explanation:
Remove edge between (1,2) and(0,3) and add edge between (1,4) and (3,5)
 
 

Your Task:

You don't need to read or print anything. Your task is to complete the function Solve() which takes an integer n denoting no. of vertices and a matrix edge[][] denoting the edges of graph and return the minimum number of operation to connect a graph

 

Constraints:

1<=n<=105
0<=m<=105
0<=edge[i][0],edge[i][1]

If you are facing any issue on this page. Please let us know.
Output Window
Suggest Feedback
Problem Solved Successfully
Test Cases Passed: 
1101 /1101
Total Points Scored: 
4 /4
Your Total Score: 
54
Total Time Taken: 
0.13
Your Accuracy: 
100%
Attempts No.: 
1
Next Suggested Problem(s):
Total Number Of Spanning Trees In A Graph
Minimum edges
Shortest Path in Weighted undirected graph
Suggested Contest:
Based on your excellent performance, we believe you are fully prepared to participate in this upcoming contest.
Suggested Contest Banner
GFG Weekly Coding Contest
Participate every Sunday at 7 PM. Practice DSA, compete with peers, win Geekbits !
Participate now
C++ (g++ 5.4)
Average Time: 30m



        vector <int> rank,parent,size;


 

Custom Input
fab_icon
