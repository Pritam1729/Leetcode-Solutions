#include <stack>
class Solution {
public:
    bool yes(string s){
        stack <char> st;
        st.push('1');
        for(int i =0;i<s.length();i++) {
            if(s[i] == '(') st.push(s[i]);
            else{
                if(st.top() == '(') st.pop();
                else return false;
            }
        }
        if(st.top() == '1') return true;
        else return false;
        return true;
    }

    vector<string> generateParenthesis(int n) {
        string s = "";
        for(int i = 0;i<n;i++){
            s = s+"()";
        }
        sort(s.begin(),s.end());
        vector <string> v;
        do{
            if(yes(s)) v.push_back(s);
            // cout<<s<<" "<<yes(s)<<endl;
        }while(next_permutation(s.begin(),s.end()));
        return v;
    }
};
