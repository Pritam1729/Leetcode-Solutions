/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {

private:
    void inorder(TreeNode *root,stack <int> &s) {
        if(root == NULL) return;
        if(root->left == NULL && root->right == NULL) s.push(root->val);
        inorder(root->left,s);
        inorder(root->right,s);
        return;
    }
public:
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        stack <int> s1,s2;
        inorder(root1,s1);
        inorder(root2,s2);
        while(!s1.empty() && !s2.empty()){
            if(s1.top() != s2.top()) return false;
            s1.pop();
            s2.pop();
        }
        if(!s1.empty() || !s2.empty()) return false;
        return true;
    }
};
