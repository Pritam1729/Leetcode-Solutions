class Solution {
public:

    struct ComparePairs {
        bool operator()(const pair<int, int>& p1, const pair<int, int>& p2) {
            if (p1.first != p2.first)
                return p1.first < p2.first; 
            return p1.second < p2.second; 
        }
    };

    int solve(int num,vector <int> &dp) {
        if(num == 1) return 0;
        if(num%2 == 0) return 1 + solve(num/2,dp);
        return 1 + solve(3*num + 1,dp);
    }


    int getKth(int lo, int hi, int k) {
        vector <pair <int,int>> ans;
        vector <int> dp(100*hi+1,-1);
        for(int i = lo;i<=hi;i++) {
            ans.push_back({solve(i,dp),i});
        }
        sort(ans.begin(),ans.end(),ComparePairs());
        return ans[k-1].second;
    }
};
