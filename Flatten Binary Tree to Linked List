/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector <TreeNode *> v;

    void preorder(TreeNode *root) {
        if(root) {
            v.push_back(root);
            preorder(root->left);
            preorder(root->right);
        }
        return;
    }

    void flatten(TreeNode* root) {
        preorder(root);
        if(v.size() != 0){
            root = v[0];
            root->left =NULL;
            root->right = NULL;
        }
        TreeNode* temp = root;
        for(int i = 1;i<v.size();i++) {
            temp->right = v[i];
            temp = temp->right;
            temp->left = NULL;
            temp->right = NULL;
        } 
    }
};
