/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int to_deci(string temp) {
        int count = 0;
        int p = 0;
        for(int i = temp.length()-1;i>=0;i--) {
            count += ((temp[i]-'0')*pow(2,p++));
        }
        return count;
    }

    void solve(TreeNode *root,int &sum,string temp) {
        if(root == NULL) return;
        temp = temp + to_string(root->val);
        if(!root->left && !root->right) {
            sum += to_deci(temp);
            return;
        }
        solve(root->left,sum,temp);
        solve(root->right,sum,temp);
        return;
    }

    int sumRootToLeaf(TreeNode* root) {
        int sum = 0;
        solve(root,sum,"");
        return sum;
    }
};
