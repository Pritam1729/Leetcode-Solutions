/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int find(TreeNode *root) {
        if(root == NULL) return 0;
        return max(1+find(root->left),1+find(root->right));
    }

    void solve(TreeNode *root,int i,int level,int &item,bool &ok) {
        if(root == NULL) return;
        if(i == level-1 && ok == true)  {
            item = root->val;
            ok = false;
            return;
        }
        solve(root->left,i+1,level,item,ok);
        solve(root->right,i+1,level,item,ok);
    }

    int findBottomLeftValue(TreeNode* root) {
        int level = find(root);
        int item = INT_MIN;
        bool ok = true;
        solve(root,0,level,item,ok);
        return item;
    }
    
};
