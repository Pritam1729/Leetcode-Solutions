class Solution {
public:
    map <int,int> m;

    vector<vector<int>> getAncestors(int n, vector<vector<int>>& edges) {
        vector <vector <int>> adj(n);
        for(auto &i:edges) {
            adj[i[1]].push_back(i[0]);
        }
        vector <vector <int>> ans;
        for(int i = 0;i<n;i++) {
            queue <int> q;
            q.push(i);
            set <int> temp;
            vector <int> vis(n,0);
            vis[i] = 1;
            while(!q.empty()) {
                int node = q.front();
                q.pop();
                if(node != i) temp.insert(node);
                for(auto &j:adj[node]) {
                    if(vis[j] == 0) {
                        vis[j] = 1;
                        q.push(j);
                    }
                }
            }
            vector <int> num;
            for(auto i:temp) num.push_back(i);
            // m[i] = num;
            ans.push_back(num);
        }
        return ans;
    }
};
