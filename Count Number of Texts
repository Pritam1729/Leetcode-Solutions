class Solution {
public:
    int mod = 1000000007;
    long long solve(string &s,int index,vector <long long>& dp) {
        if(index >= s.length()) return 1;
        if(dp[index] != -1) return dp[index];
        long long minn = 0;
        minn = (minn%mod + solve(s,index+1,dp)%mod)%mod;
        if(index + 1 < s.length() && s[index] == s[index + 1]) {
                minn = (minn%mod + solve(s,index+2,dp)%mod)%mod;
        } 
        if(index + 2 < s.length() && s[index] == s[index + 1] && s[index] == s[index+2]) {
                minn = (minn%mod + solve(s,index+3,dp)%mod)%mod;
        }
        if(s[index] == '9' || s[index] == '7') {
            if(index + 3 <s.length() && s[index] == s[index+1] && s[index] == s[index+2] && s[index] == s[index+3]) {
                minn = (minn%mod +  solve(s,index+4,dp)%mod)%mod;
            }
        }
        return dp[index] = minn%mod;
    }

    int countTexts(string pressedKeys) {
        vector <long long> dp(pressedKeys.size()+1,-1);
        return solve(pressedKeys,0,dp)%mod;
    }
};
